CMAKE_MINIMUM_REQUIRED( VERSION 2.8 )

PROJECT( AllIn )

SET( LIB_NAME "allin" )
SET( LIB_STATIC_NAME "${LIB_NAME}_s" )

SET( LIB_CPP_NAME "${LIB_NAME}_cpp" )
SET( LIB_CPP_STATIC_NAME "${LIB_CPP_NAME}_s" )

SET( TEST_NAME "${LIB_NAME}_test" )

SET( BUILD_SHARED_LIBS ON)

SET( CMAKE_BUILD_TYPE Release )
SET( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/modules/" )

SET( LIB_DEFINITIONS "LIB" )

INCLUDE_DIRECTORIES(
	./src
	#./src/win
	#./src/linux
	./src/cpp
)

SET( WIN_SOURCES
	src/win/mouse.c
	src/win/keyboard.c
	src/win/display.c
	src/win/system.c
	src/win/error.c
)

SOURCE_GROUP(win FILES ${WIN_SOURCES})

SET( LINUX_SOURCES
	src/linux/mouse.c
	src/linux/keyboard.c
	src/linux/system.c
	src/linux/error.c
)

SOURCE_GROUP(linux FILES ${LINUX_SOURCES})

SET( CPP_SOURCES
	src/cpp/mouse.cpp
	src/cpp/keyboard.cpp
)

SET( LIBRARIES
)

SET( SOURCES
	src/keyboard.c
	src/mouse.c
	src/multitouch.c
	src/display.c
	src/system.c
	${WIN_SOURCES}
	${LINUX_SOURCES}
)

SET( TEST_SOURCES
	src/test/main.c
)

IF (WIN32)
    LIST(APPEND LIBRARIES
        psapi
    )
ENDIF (WIN32)

IF (CMAKE_COMPILER_IS_GNUCC)
	LIST(APPEND LIBRARIES
		X11
	)
ENDIF (CMAKE_COMPILER_IS_GNUCC)

ADD_LIBRARY(${LIB_NAME} ${SOURCES})
SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES COMPILE_DEFINITIONS ${LIB_DEFINITIONS})
TARGET_LINK_LIBRARIES(${LIB_NAME} ${LIBRARIES})

ADD_LIBRARY(${LIB_STATIC_NAME} STATIC ${SOURCES})
SET_TARGET_PROPERTIES(${LIB_STATIC_NAME} PROPERTIES COMPILE_DEFINITIONS ${LIB_DEFINITIONS})
TARGET_LINK_LIBRARIES(${LIB_STATIC_NAME} ${LIBRARIES})


ADD_LIBRARY(${LIB_CPP_NAME} ${CPP_SOURCES})
SET_TARGET_PROPERTIES(${LIB_CPP_NAME} PROPERTIES COMPILE_DEFINITIONS ${LIB_DEFINITIONS})

ADD_LIBRARY(${LIB_CPP_STATIC_NAME} STATIC ${CPP_SOURCES})
SET_TARGET_PROPERTIES(${LIB_CPP_STATIC_NAME} PROPERTIES COMPILE_DEFINITIONS ${LIB_DEFINITIONS})


ADD_EXECUTABLE(${TEST_NAME} ${TEST_SOURCES})
TARGET_LINK_LIBRARIES(${TEST_NAME} ${LIB_NAME})
